// Generated by CoffeeScript 1.7.1
(function() {
  var Q, fs, getDotDesktopList, glob, ofs, parseFile, path, readFile, result;

  path = require("path");

  glob = require("glob");

  fs = require("q-io/fs");

  ofs = require("fs");

  Q = require("q");

  getDotDesktopList = function(p) {
    var deferred, pattern;
    pattern = path.resolve("" + p + "/**/*.desktop");
    deferred = Q.defer();
    glob(pattern, function(err, data) {
      var out;
      if (err) {
        deferred.reject(err);
      }
      out = {
        path: p,
        list: data
      };
      return deferred.resolve(out);
    });
    return deferred.promise;
  };

  readFile = function(fileList) {
    var arr, deferred, f, l, _i, _len, _ref;
    deferred = Q.defer();
    arr = [];
    l = fileList["path"].length;
    _ref = fileList["list"];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      f = _ref[_i];
      arr.push(fs.read(f));
    }
    Q.all(arr).then(function(list) {
      var filename, i, line, lines, obj, _j, _len1;
      obj = {};
      for (i = _j = 0, _len1 = list.length; _j < _len1; i = ++_j) {
        lines = list[i];
        line = lines.split("\n");
        filename = fileList["list"][i].slice(l, -1);
        obj[filename] = line;
      }
      return deferred.resolve(obj);
    });
    return deferred.promise;
  };

  parseFile = function(obj) {
    console.log("parseFile here");
    return console.log(obj);
  };

  result = getDotDesktopList("/usr/share/applications/").then(readFile).then(parseFile);

  module.exports = result;

}).call(this);

//# sourceMappingURL=index.map
